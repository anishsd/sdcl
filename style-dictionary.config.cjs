/* eslint-disable prettier/prettier */
/* eslint-disable @typescript-eslint/no-var-requires */
/* eslint-disable no-undef */

// Token Transformer:
// npx token-transformer figma/tokens/exported.json figma/tokens/transformed/global.json global
// npx token-transformer figma/tokens/exported.json figma/tokens/transformed/country.json country
// npx token-transformer figma/tokens/exported.json figma/tokens/transformed/sme.json sme

// Style Dictionary:
// npx style-dictionary build --config style-dictionary.config.cjs

const constants = require('./figma/constants.js');

const autoGeneratedFileHeader = () => [
  'Do not edit directly, this file was auto-generated.',
];

const filterTokenSet = (set) => (token) => {
  const rootTokenSetPath = `${constants.TRANSFORMED_TOKENS_PATH}${constants.ROOT_TOKEN_SET}.json`;
  const currentTokenSetPath = `${constants.TRANSFORMED_TOKENS_PATH}${set}.json`;
  const isFiltered = [rootTokenSetPath, currentTokenSetPath].includes(
    token?.filePath
  );

  return isFiltered;
};

const retrieveBrandFiles = ({ format, extension }) =>
  constants.BRAND_TOKEN_SETS.map((set) => ({
    destination: `${set}/index.${extension}`,
    filter: filterTokenSet(set),
    format,
    outputReferences: true,
    options: { fileHeader: 'autoGeneratedFileHeader' },
  }));

const retrievePlatform = (config) => ({
  [config.type]: {
    transformGroup: config.type,
    buildPath: constants.BRAND_BUILD_PATH,
    files: retrieveBrandFiles(config),
  },
});

const retrievePlatforms = () =>
  constants.PLATFORMS_CONFIG.reduce(
    (prevConfig, currentConfig) => ({
      ...prevConfig,
      ...retrievePlatform(currentConfig),
    }),
    {}
  );

// eslint-disable-next-line no-undef
// module.exports = {
//   source: [`${constants.TRANSFORMED_TOKENS_PATH}*.json`],
//   fileHeader: { autoGeneratedFileHeader },
//   platforms: retrievePlatforms(),
// };

module.exports = {
  include: [
    'figma/tokens/transformed/global.json',
    'figma/tokens/transformed/country.json',
    'figma/tokens/transformed/sme.json',
  ],
  fileHeader: { autoGeneratedFileHeader },
  platforms: {
    css: {
      transformGroup: 'css',
      buildPath: 'src/styles/brands/',
      files: [
        {
          destination: 'country/index.css',
          filter: filterTokenSet('country'),
          format: 'css/variables',
          outputReferences: true,
          options: { fileHeader: 'autoGeneratedFileHeader' },
        },
        {
          destination: 'sme/index.css',
          filter: filterTokenSet('sme'),
          format: 'css/variables',
          outputReferences: true,
          options: { fileHeader: 'autoGeneratedFileHeader' },
        },
      ],
    },
    js: {
      transformGroup: 'js',
      buildPath: 'src/styles/brands/',
      files: [
        {
          destination: 'country/index.js',
          filter: filterTokenSet('country'),
          format: 'javascript/es6',
          outputReferences: true,
          options: { fileHeader: 'autoGeneratedFileHeader' },
        },
        {
          destination: 'sme/index.js',
          filter: filterTokenSet('sme'),
          format: 'javascript/es6',
          outputReferences: true,
          options: { fileHeader: 'autoGeneratedFileHeader' },
        },
      ],
    },
  },
};
